{"version":3,"sources":["checkmark.svg","cancel.svg","App.js","reportWebVitals.js","index.js"],"names":["colors","App","useState","scores","setScores","color","setColor","name","setName","time","setTime","id","a","fetch","method","console","log","headers","body","JSON","stringify","useEffect","data","json","res","interval1","setInterval","getData","interval2","prevColor","length","clearInterval","className","style","background","opacity","map","idx","_id","onClick","remove","src","cancel","alt","type","value","onChange","e","target","add","checkmark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,G,MAAA,IAA0B,uCCA1B,MAA0B,mCCKnCA,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WA4E7CC,MA1Ef,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,OAGaF,mBAAS,GAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIWJ,qBAJX,mBAINK,EAJM,KAIAC,EAJA,OAKWN,qBALX,mBAKNO,EALM,KAKAC,EALA,iDAyBb,WAAsBC,GAAtB,SAAAC,EAAA,+EAEUC,MAAM,WAAD,OAAYF,GAAM,CAC3BG,OAAQ,WAHd,sDAMGC,QAAQC,IAAR,MANH,yDAzBa,kEAmCb,sBAAAJ,EAAA,yDACMH,GAASF,EADf,iEAEQM,MAAM,UAAW,CACrBC,OAAQ,OACRG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBX,OAAMF,WARZ,4CAnCa,sBAgDb,OAzCAc,qBAAU,WAAM,4CACd,8BAAAT,EAAA,sEACqBC,MAAM,YAD3B,cACQS,EADR,gBAEoBA,EAAKC,OAFzB,OAEQC,EAFR,OAGEpB,EAAUoB,GAHZ,4CADc,sBAMd,IAAMC,EAAYC,aAAY,YANf,WAAD,wBAOZC,KACC,KACGC,EAAYF,aAAY,WAC5BpB,GAAS,SAAAuB,GAAS,OAAIA,IAAc7B,EAAO8B,OAAS,EAAI,IAAMD,OAC7D,KACH,OAAO,WACLE,cAAcN,GACdM,cAAcH,MAEf,IA0BD,sBAAKI,UAAU,MAAMC,MAAO,CAACC,WAAYlC,EAAOK,GAAQ8B,QAAS,IAAjE,UACE,qBAAKH,UAAU,QAAf,8BACA,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SAAwB,4CACxB,qBAAKA,UAAU,SAAf,SAAwB,4CACxB,qBAAKA,UAAU,SAAf,SAAwB,oDAEzB7B,EAAOiC,KAAI,WAAoBC,GAApB,IAAEC,EAAF,EAAEA,IAAK/B,EAAP,EAAOA,KAAME,EAAb,EAAaA,KAAb,OACV,sBAAKuB,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBK,EAAI,IAC7B,qBAAKL,UAAU,SAAf,SAAyBzB,IACzB,qBAAKyB,UAAU,SAAf,SAAyBvB,IACzB,qBAAKuB,UAAU,SAASO,QAAS,kBA7D5B,2CA6DkCC,CAAOF,IAA9C,SAAoD,qBAAKG,IAAKC,EAAQC,IAAI,eAJjDN,MAO7B,sBAAKL,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,iBACA,qBAAKA,UAAU,SAAf,SAAwB,uBAAOY,KAAK,OAAOC,MAAOtC,EAAMuC,SAAU,SAAAC,GAAC,OAAIvC,EAAQuC,EAAEC,OAAOH,YACxF,qBAAKb,UAAU,SAAf,SAAwB,uBAAOY,KAAK,SAASC,MAAOpC,EAAMqC,SAAU,SAAAC,GAAC,OAAIrC,EAAQqC,EAAEC,OAAOH,YAC1F,qBAAKb,UAAU,SAASO,QAAS,kBApE5B,0CAoEkCU,IAAvC,SAA8C,qBAAKR,IAAKS,EAAWP,IAAI,uBC/DlEQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bdf9784c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/checkmark.4becc71a.svg\";","export default __webpack_public_path__ + \"static/media/cancel.9895197a.svg\";","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport checkmark from './checkmark.svg';\nimport cancel from './cancel.svg';\n\nconst colors = ['#CD5C5C', '#F08080', '#FA8072', '#E9967A', '#FFA07A'];\n\nfunction App() {\n\n  const [scores, setScores] = useState([]);\n  const [color, setColor] = useState(0);\n  const [name, setName] = useState();\n  const [time, setTime] = useState();\n\n  useEffect(() => {\n    async function getData() {\n      const data = await fetch('/records');\n      const res = await data.json();\n      setScores(res);\n    }\n    const interval1 = setInterval(() => {\n      getData();\n    }, 1000);\n    const interval2 = setInterval(() => {\n      setColor(prevColor => prevColor === colors.length - 1 ? 0 : ++prevColor);\n    }, 2000);\n    return () => {\n      clearInterval(interval1);\n      clearInterval(interval2);\n    }\n  }, []);\n\n  async function remove(id) {\n    try{\n      await fetch(`/record/${id}`, {\n        method: \"DELETE\"\n      });\n    }catch(e){\n     console.log(e);\n    }\n  }\n\n  async function add() {\n    if(!time || !name) return;\n    await fetch('/record', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        time, name\n      })\n    });\n  }\n\n  return (\n    <div className=\"App\" style={{background: colors[color], opacity: 0.8}}>\n      <div className=\"title\">Quiz leaderboard</div>\n      <div className=\"flex\">\n        <div className=\"flex-1\"><strong>Rank</strong></div>\n        <div className=\"flex-2\"><strong>Name</strong></div>\n        <div className=\"flex-3\"><strong>Time (ms)</strong></div>\n      </div>\n      {scores.map(({_id, name, time}, idx) => (\n        <div className=\"flex\" key={idx}>\n          <div className=\"flex-1\">{idx+1}</div>\n          <div className=\"flex-2\">{name}</div>\n          <div className=\"flex-3\">{time}</div>\n          <div className=\"flex-4\" onClick={() => remove(_id)}><img src={cancel} alt=\"cancel\"/></div>\n        </div>\n      ))}\n      <div className=\"flex\">\n          <div className=\"flex-1\">...</div>\n          <div className=\"flex-2\"><input type=\"text\" value={name} onChange={e => setName(e.target.value)} /></div>\n          <div className=\"flex-3\"><input type=\"number\" value={time} onChange={e => setTime(e.target.value)} /></div>\n          <div className=\"flex-4\" onClick={() => add()}><img src={checkmark} alt=\"checkmark\" /></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}